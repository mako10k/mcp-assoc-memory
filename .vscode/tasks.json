{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "MCP: Test Connection",
            "type": "shell",
            "command": "python3",
            "args": ["-m", "mcp_assoc_memory.server", "--config", "config.json", "--test"],
            "options": {
                "cwd": "${workspaceFolder}",
                "env": {
                    "PYTHONPATH": "${workspaceFolder}/src"
                }
            },
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Logs: Rotate Log Files",
            "type": "shell",
            "command": "${workspaceFolder}/scripts/rotate_logs.sh",
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Lint: Smart Lint (All)",
            "type": "shell",
            "command": "python",
            "args": [
                "scripts/smart_lint.py"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [
                {
                    "owner": "flake8",
                    "fileLocation": "relative",
                    "pattern": {
                        "regexp": "^\\s+(.*):(\\d+):(\\d+) - (.*)$",
                        "file": 1,
                        "line": 2,
                        "column": 3,
                        "message": 4
                    }
                },
                {
                    "owner": "mypy",
                    "fileLocation": "relative",
                    "pattern": {
                        "regexp": "^\\s+(.*):(\\d+) - \\[(\\w+)\\] (.*)$",
                        "file": 1,
                        "line": 2,
                        "code": 3,
                        "message": 4
                    }
                }
            ]
        },
        {
            "label": "Lint: Smart Lint (flake8 only)",
            "type": "shell",
            "command": "python",
            "args": [
                "scripts/smart_lint.py",
                "--tool",
                "flake8"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": {
                "owner": "flake8",
                "fileLocation": "relative",
                "pattern": {
                    "regexp": "^\\s+(.*):(\\d+):(\\d+) - (.*)$",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "message": 4
                }
            }
        },
        {
            "label": "Lint: Smart Lint (mypy only)",
            "type": "shell",
            "command": "python",
            "args": [
                "scripts/smart_lint.py",
                "--tool",
                "mypy"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": {
                "owner": "mypy",
                "fileLocation": "relative",
                "pattern": {
                    "regexp": "^\\s+(.*):(\\d+) - \\[(\\w+)\\] (.*)$",
                    "file": 1,
                    "line": 2,
                    "code": 3,
                    "message": 4
                }
            }
        },
        {
            "label": "Format: Run black",
            "type": "shell",
            "command": "sh",
            "args": [
                "-c",
                "black src/ --line-length=120 --diff > .copilot-temp/black-diff.txt 2>&1 && black src/ --line-length=120 && echo \"Black formatting completed. Diff saved to .copilot-temp/black-diff.txt\""
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Format: Run isort",
            "type": "shell",
            "command": "sh",
            "args": [
                "-c",
                "isort src/ --diff > .copilot-temp/isort-diff.txt 2>&1 && isort src/ && echo \"Import sorting completed. Diff saved to .copilot-temp/isort-diff.txt\""
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Code Quality: Run All",
            "dependsOrder": "sequence",
            "dependsOn": [
                "Lint: Smart Lint (All)",
                "Format: Run black",
                "Format: Run isort"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Test: Run Unit Tests",
            "type": "shell",
            "command": "python",
            "args": ["-m", "pytest", "-m", "unit", "--tb=short", "--maxfail=10", "-v"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": {
                "owner": "pytest",
                "fileLocation": "relative",
                "pattern": {
                    "regexp": "^(.*):(\\d+):\\s+(FAILED|ERROR)\\s+(.*)$",
                    "file": 1,
                    "line": 2,
                    "severity": 3,
                    "message": 4
                }
            }
        },
        {
            "label": "Test: Run Integration Tests",
            "type": "shell",
            "command": "python",
            "args": ["-m", "pytest", "-m", "integration", "--tb=short", "--maxfail=5", "-v"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": {
                "owner": "pytest",
                "fileLocation": "relative",
                "pattern": {
                    "regexp": "^(.*):(\\d+):\\s+(FAILED|ERROR)\\s+(.*)$",
                    "file": 1,
                    "line": 2,
                    "severity": 3,
                    "message": 4
                }
            }
        },
        {
            "label": "Test: Run All Tests with Coverage",
            "type": "shell",
            "command": "python",
            "args": ["-m", "pytest", "--tb=short", "--cov=src", "--cov-report=term-missing", "--cov-report=html", "-v"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": {
                "owner": "pytest",
                "fileLocation": "relative",
                "pattern": {
                    "regexp": "^(.*):(\\d+):\\s+(FAILED|ERROR)\\s+(.*)$",
                    "file": 1,
                    "line": 2,
                    "severity": 3,
                    "message": 4
                }
            }
        },
        {
            "label": "Test: Run Quick Tests (Unit Only)",
            "type": "shell",
            "command": "python",
            "args": ["-m", "pytest", "-m", "unit", "--tb=line", "--maxfail=10", "-q"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": {
                "owner": "pytest",
                "fileLocation": "relative",
                "pattern": {
                    "regexp": "^(.*):(\\d+):\\s+(FAILED|ERROR)\\s+(.*)$",
                    "file": 1,
                    "line": 2,
                    "severity": 3,
                    "message": 4
                }
            }
        },
        {
            "label": "Test: Run E2E Tests",
            "type": "shell",
            "command": "python",
            "args": ["-m", "pytest", "-m", "e2e and not slow", "--tb=short", "--maxfail=3", "-v"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": {
                "owner": "pytest",
                "fileLocation": "relative",
                "pattern": {
                    "regexp": "^(.*):(\\d+):\\s+(FAILED|ERROR)\\s+(.*)$",
                    "file": 1,
                    "line": 2,
                    "severity": 3,
                    "message": 4
                }
            }
        },
        {
            "label": "Test: Check Setup",
            "type": "shell",
            "command": "python",
            "args": ["-c", "import pytest, pytest_asyncio, pytest_cov, pytest_mock; print('✅ All test dependencies available')"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Test: Local Type Verification",
            "type": "shell",
            "command": "python",
            "args": [".copilot-temp/test-local-only-00002.py"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Test: Complete Test Suite",
            "dependsOrder": "sequence",
            "dependsOn": [
                "Test: Check Setup",
                "Test: Run Unit Tests",
                "Test: Run Integration Tests",
                "Test: Run E2E Tests"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Test: All Quality Checks",
            "dependsOrder": "sequence",
            "dependsOn": [
                "Lint: Smart Lint (All)",
                "Test: Complete Test Suite"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "CI/CD: Setup Pre-commit",
            "type": "shell",
            "command": "pre-commit",
            "args": ["install"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "CI/CD: Run Pre-commit",
            "type": "shell",
            "command": "pre-commit",
            "args": ["run", "--all-files"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Security: Run Bandit Scan",
            "type": "shell",
            "command": "bandit",
            "args": [
                "-r", "src/",
                "-f", "json",
                "-o", ".copilot-temp/bandit-report.json"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Security: Run Safety Check",
            "type": "shell",
            "command": "sh",
            "args": [
                "-c",
                "safety scan --format json > .copilot-temp/safety-report.json 2>/dev/null || echo '{\"vulnerabilities\": [], \"checked_packages\": 0}' > .copilot-temp/safety-report.json && echo 'Safety scan completed. Report saved to .copilot-temp/safety-report.json'"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Complexity: Check Code Complexity",
            "type": "shell",
            "command": "radon",
            "args": [
                "cc", "src/",
                "--min=B",
                "--show-complexity",
                "--output-file=.copilot-temp/complexity-report.txt"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Complexity: Check Maintainability",
            "type": "shell",
            "command": "radon",
            "args": [
                "mi", "src/",
                "--output-file=.copilot-temp/maintainability-report.txt"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        // Docker tasks disabled to prevent storage overflow
        /*
        {
            "label": "Docker: Build Image",
            "type": "shell",
            "command": "docker",
            "args": [
                "build",
                "-t", "mcp-assoc-memory:latest",
                "."
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Docker: Run Container",
            "type": "shell",
            "command": "docker",
            "args": [
                "run",
                "--rm",
                "-p", "8000:8000",
                "-v", "${workspaceFolder}/data:/app/data",
                "mcp-assoc-memory:latest"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        */
        {
            "label": "CI/CD: Full Quality Check",
            "dependsOrder": "sequence",
            "dependsOn": [
                "Code Quality: Run All",
                "Security: Run Bandit Scan",
                "Security: Run Safety Check", 
                "Complexity: Check Code Complexity",
                "Test: Run All Tests"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        }
    ]
}