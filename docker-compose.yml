version: '3.8'

services:
  # MCP Associative Memory Server
  mcp-assoc-memory:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: mcp-assoc-memory-server
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8000
      - SERVER_MODE=production
      - LOG_LEVEL=INFO
      - ENABLE_METRICS=true
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./backups:/app/backups
      - ./.env:/app/.env:ro
    networks:
      - mcp-network
    healthcheck:
      test: ["CMD", "python", "scripts/health_check.py"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Optional: ChromaDB as separate service
  # chromadb:
  #   image: chromadb/chroma:latest
  #   container_name: mcp-chromadb
  #   restart: unless-stopped
  #   ports:
  #     - "8001:8000"
  #   volumes:
  #     - chromadb_data:/chroma/chroma
  #   networks:
  #     - mcp-network
  #   environment:
  #     - CHROMA_SERVER_HOST=0.0.0.0
  #     - CHROMA_SERVER_HTTP_PORT=8000

  # Optional: Monitoring with Prometheus
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: mcp-prometheus
  #   restart: unless-stopped
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
  #     - prometheus_data:/prometheus
  #   networks:
  #     - mcp-network
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/etc/prometheus/console_libraries'
  #     - '--web.console.templates=/etc/prometheus/consoles'

  # Optional: Grafana for visualization
  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: mcp-grafana
  #   restart: unless-stopped
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #     - ./monitoring/grafana:/etc/grafana/provisioning
  #   networks:
  #     - mcp-network
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin

networks:
  mcp-network:
    driver: bridge

volumes:
  # Uncomment if using separate ChromaDB service
  # chromadb_data:
  # prometheus_data:
  # grafana_data:
